{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport S from \"./Style.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FlipCard = function (_Component) {\n  _inherits(FlipCard, _Component);\n\n  var _super = _createSuper(FlipCard);\n\n  function FlipCard(props) {\n    var _this;\n\n    _classCallCheck(this, FlipCard);\n\n    _this = _super.call(this, props);\n    var isFlipped = _this.props.alignHeight || _this.props.alignWidth ? !props.flip : props.flip;\n    _this.state = {\n      isFlipped: isFlipped,\n      isFlipping: false,\n      rotate: new Animated.Value(Number(props.flip)),\n      mesured: false,\n      height: 0,\n      width: 0,\n      face: {\n        width: 0,\n        height: 0\n      },\n      back: {\n        width: 0,\n        height: 0\n      }\n    };\n    return _this;\n  }\n\n  _createClass(FlipCard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.flip !== this.props.flip) {\n        this._toggleCard();\n      }\n    }\n  }, {\n    key: \"_toggleCard\",\n    value: function _toggleCard() {\n      this.setState({\n        isFlipping: true\n      });\n      this.props.onFlipStart(this.state.isFlipped);\n\n      this._animation(!this.state.isFlipped);\n    }\n  }, {\n    key: \"_animation\",\n    value: function _animation(isFlipped) {\n      var _this2 = this;\n\n      if (!this.timer) {\n        this.timer = setTimeout(function () {\n          _this2.setState({\n            isFlipped: !_this2.state.isFlipped\n          });\n\n          _this2.timer = null;\n        }, 120);\n      }\n\n      Animated.spring(this.state.rotate, {\n        toValue: Number(isFlipped),\n        friction: this.props.friction,\n        useNativeDriver: this.props.useNativeDriver\n      }).start(function (param) {\n        _this2.setState({\n          isFlipping: false\n        });\n\n        _this2.props.onFlipEnd(_this2.state.isFlipped);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.alignHeight || this.props.alignWidth) {\n        this.measureOtherSideTimeout = setTimeout(this.measureOtherSide.bind(this), 32);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.measureOtherSideTimeout);\n    }\n  }, {\n    key: \"measureOtherSide\",\n    value: function measureOtherSide() {\n      this.setState({\n        isFlipped: !this.state.isFlipped,\n        mesured: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var c = this.props.children;\n      var transform = this.props.perspective ? [{\n        perspective: this.props.perspective\n      }] : [];\n      var render_side = false;\n\n      if (this.props.flipHorizontal) {\n        transform.push({\n          rotateY: this.state.rotate.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '180deg']\n          })\n        });\n      }\n\n      if (this.props.flipVertical) {\n        transform.push({\n          rotateX: this.state.rotate.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '180deg']\n          })\n        });\n      }\n\n      if (this.state.isFlipped) {\n        render_side = _jsx(Back, {\n          style: [this.state.height > 0 && {\n            height: this.state.height\n          }, this.state.width > 0 && {\n            width: this.state.width\n          }],\n          flipHorizontal: this.props.flipHorizontal,\n          flipVertical: this.props.flipVertical,\n          perspective: this.props.perspective,\n          onLayout: function onLayout(event) {\n            var _event$nativeEvent$la = event.nativeEvent.layout,\n                x = _event$nativeEvent$la.x,\n                y = _event$nativeEvent$la.y,\n                width = _event$nativeEvent$la.width,\n                height = _event$nativeEvent$la.height;\n\n            var _update = _extends(_this3.state.back, {\n              width: width,\n              height: height\n            });\n\n            _this3.setState({\n              back: _update\n            });\n\n            if (_this3.state.mesured) {\n              if (_this3.props.alignHeight) {\n                _this3.setState({\n                  height: Math.max(_this3.state.face.height, _this3.state.back.height)\n                });\n              }\n\n              if (_this3.props.alignWidth) {\n                _this3.setState({\n                  width: Math.max(_this3.state.face.width, _this3.state.back.width)\n                });\n              }\n            }\n          },\n          children: c[1]\n        });\n      } else {\n        render_side = _jsx(Face, {\n          style: [this.state.height > 0 && {\n            height: this.state.height\n          }, this.state.width > 0 && {\n            width: this.state.width\n          }],\n          onLayout: function onLayout(event) {\n            var _event$nativeEvent$la2 = event.nativeEvent.layout,\n                x = _event$nativeEvent$la2.x,\n                y = _event$nativeEvent$la2.y,\n                width = _event$nativeEvent$la2.width,\n                height = _event$nativeEvent$la2.height;\n\n            var _update = _extends(_this3.state.face, {\n              width: width,\n              height: height\n            });\n\n            _this3.setState({\n              face: _update\n            });\n\n            if (_this3.state.mesured) {\n              if (_this3.props.alignHeight) {\n                _this3.setState({\n                  height: Math.max(_this3.state.face.height, _this3.state.back.height)\n                });\n              }\n\n              if (_this3.props.alignWidth) {\n                _this3.setState({\n                  width: Math.max(_this3.state.face.width, _this3.state.back.width)\n                });\n              }\n            }\n          },\n          children: c[0]\n        });\n      }\n\n      if (this.props.clickable) {\n        var opacity = 0;\n\n        if ((this.props.alignHeight || this.props.alignWidth) && this.state.mesured || !(this.props.alignHeight || this.props.alignWidth)) {\n          opacity = 1;\n        }\n\n        return _jsx(TouchableOpacity, {\n          style: {\n            flex: 1\n          },\n          testID: this.props.testID,\n          activeOpacity: 1,\n          onPress: function onPress() {\n            _this3._toggleCard();\n          },\n          children: _jsx(Animated.View, _objectSpread(_objectSpread({}, this.props), {}, {\n            style: [S.flipCard, {\n              transform: transform,\n              opacity: opacity\n            }, this.props.style],\n            children: render_side\n          }))\n        });\n      } else {\n        return _jsx(Animated.View, _objectSpread(_objectSpread({}, this.props), {}, {\n          style: [S.flipCard, {\n            transform: transform\n          }, this.props.style],\n          children: render_side\n        }));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.isFlipped !== nextProps.flip) {\n        return {\n          flip: nextProps.flip\n        };\n      } else return null;\n    }\n  }]);\n\n  return FlipCard;\n}(Component);\n\nFlipCard.propTypes = {\n  style: ViewPropTypes.style\n};\nexport { FlipCard as default };\nFlipCard.propTypes = {\n  flip: PropTypes.bool,\n  friction: PropTypes.number,\n  perspective: PropTypes.number,\n  flipHorizontal: PropTypes.bool,\n  flipVertical: PropTypes.bool,\n  clickable: PropTypes.bool,\n  onFlipEnd: PropTypes.func,\n  onFlipStart: PropTypes.func,\n  alignHeight: PropTypes.bool,\n  alignWidth: PropTypes.bool,\n  useNativeDriver: PropTypes.bool,\n  children: function children(props, propName, componentName) {\n    var prop = props[propName];\n\n    if (React.Children.count(prop) !== 2) {\n      return new Error('`' + componentName + '` ' + 'should contain exactly two children. ' + 'The first child represents the front of the card. ' + 'The second child represents the back of the card.');\n    }\n  }\n};\nFlipCard.defaultProps = {\n  flip: false,\n  friction: 6,\n  perspective: 1000,\n  flipHorizontal: false,\n  flipVertical: true,\n  clickable: true,\n  onFlipEnd: function onFlipEnd() {},\n  onFlipStart: function onFlipStart() {},\n  alignHeight: false,\n  alignWidth: false,\n  useNativeDriver: true\n};\nexport var Face = function (_Component2) {\n  _inherits(Face, _Component2);\n\n  var _super2 = _createSuper(Face);\n\n  function Face() {\n    _classCallCheck(this, Face);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Face, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: [S.face, this.props.style],\n        onLayout: this.props.onLayout,\n        children: this.props.children\n      });\n    }\n  }]);\n\n  return Face;\n}(Component);\nFace.propTypes = {\n  children: function children(props, propName, componentName) {}\n};\nexport var Back = function (_Component3) {\n  _inherits(Back, _Component3);\n\n  var _super3 = _createSuper(Back);\n\n  function Back() {\n    _classCallCheck(this, Back);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Back, [{\n    key: \"render\",\n    value: function render() {\n      var transform = [];\n\n      if (this.props.flipHorizontal) {\n        transform.push({\n          scaleX: -1\n        });\n\n        if (Platform.OS === \"android\") {\n          transform.push({\n            perspective: this.props.perspective\n          });\n        }\n      }\n\n      if (this.props.flipVertical) {\n        transform.push({\n          scaleY: -1\n        });\n\n        if (Platform.OS === \"android\") {\n          transform.push({\n            perspective: this.props.perspective\n          });\n        }\n      }\n\n      return _jsx(View, {\n        style: [S.back, this.props.style, {\n          transform: transform\n        }],\n        onLayout: this.props.onLayout,\n        children: this.props.children\n      });\n    }\n  }]);\n\n  return Back;\n}(Component);\nBack.defaultProps = {\n  flipHorizontal: false,\n  flipVertical: true,\n  perspective: 1000\n};\nBack.propTypes = {\n  flipHorizontal: PropTypes.bool,\n  flipVertical: PropTypes.bool,\n  perspective: PropTypes.number,\n  children: function children(props, propName, componentName) {}\n};","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/node_modules/react-native-flip-card/lib/FlipCard.js"],"names":["React","Component","PropTypes","ViewPropTypes","S","FlipCard","props","isFlipped","alignHeight","alignWidth","flip","state","isFlipping","rotate","Animated","Value","Number","mesured","height","width","face","back","prevProps","_toggleCard","setState","onFlipStart","_animation","timer","setTimeout","spring","toValue","friction","useNativeDriver","start","param","onFlipEnd","measureOtherSideTimeout","measureOtherSide","bind","clearTimeout","c","children","transform","perspective","render_side","flipHorizontal","push","rotateY","interpolate","inputRange","outputRange","flipVertical","rotateX","event","nativeEvent","layout","x","y","_update","Math","max","clickable","opacity","flex","testID","flipCard","style","nextProps","prevState","propTypes","bool","number","func","propName","componentName","prop","Children","count","Error","defaultProps","Face","onLayout","Back","scaleX","Platform","OS","scaleY"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Platform,\r\n  ViewPropTypes\r\n} from \"react-native\";\r\n\r\nimport S from './Style.js'\r\n\r\nexport default class FlipCard extends Component {\r\n  static propTypes = {\r\n    style: ViewPropTypes.style\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // set reversed boolean for detect other side size\r\n    const isFlipped = (this.props.alignHeight || this.props.alignWidth) ? !props.flip : props.flip;\r\n\r\n    this.state = {\r\n      isFlipped: isFlipped,\r\n      isFlipping: false,\r\n      rotate: new Animated.Value(Number(props.flip)),\r\n      mesured: false, // the flag to check whether it is measured or not.\r\n      height: 0,\r\n      width: 0,\r\n      face: { width: 0, height: 0 },\r\n      back: { width: 0, height: 0 }\r\n    }\r\n  }\r\n  static getDerivedStateFromProps (nextProps, prevState) {\r\n    if (prevState.isFlipped !== nextProps.flip) {\r\n      return { flip: nextProps.flip }\r\n    } else return null\r\n  }\r\n  componentDidUpdate (prevProps) {\r\n    if (prevProps.flip !== this.props.flip) {\r\n      this._toggleCard()\r\n    }\r\n  }\r\n  _toggleCard () {\r\n    this.setState({isFlipping: true})\r\n    this.props.onFlipStart(this.state.isFlipped)\r\n    this._animation(!this.state.isFlipped)\r\n  }\r\n  _animation (isFlipped) {\r\n    if (!this.timer) {\r\n      this.timer = setTimeout(() => {\r\n        this.setState({isFlipped: !this.state.isFlipped})\r\n        this.timer = null\r\n      }, 120)\r\n    }\r\n    Animated.spring(this.state.rotate,\r\n     {\r\n        toValue: Number(isFlipped),\r\n        friction: this.props.friction,\r\n        useNativeDriver: this.props.useNativeDriver\r\n      }\r\n    ).start((param) => {\r\n      this.setState({isFlipping: false})\r\n      this.props.onFlipEnd(this.state.isFlipped)\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    if (this.props.alignHeight || this.props.alignWidth) {\r\n      // need to check the other side width or height or both\r\n      this.measureOtherSideTimeout = setTimeout(this.measureOtherSide.bind(this), 32);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.measureOtherSideTimeout);\r\n  }\r\n\r\n  measureOtherSide () {\r\n    this.setState({\r\n      isFlipped: !this.state.isFlipped,\r\n      mesured: true\r\n    })\r\n  }\r\n\r\n  render () {\r\n    var c = this.props.children;\r\n    var transform = this.props.perspective ? [{ perspective: this.props.perspective }] : []\r\n    var render_side = false\r\n\r\n    if (this.props.flipHorizontal) {\r\n      transform.push(\r\n        {rotateY: this.state.rotate.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [ '0deg', '180deg' ]\r\n        })}\r\n      )\r\n    }\r\n\r\n    if (this.props.flipVertical) {\r\n      transform.push(\r\n        {rotateX: this.state.rotate.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [ '0deg', '180deg' ]\r\n        })}\r\n      )\r\n    }\r\n\r\n    if (this.state.isFlipped) {\r\n      render_side = (\r\n        <Back\r\n          style={[ this.state.height > 0 && {height: this.state.height}, this.state.width > 0 && {width: this.state.width}]}\r\n          flipHorizontal={this.props.flipHorizontal}\r\n          flipVertical={this.props.flipVertical}\r\n          perspective={this.props.perspective}\r\n          onLayout={(event) => {\r\n            var {x, y, width, height} = event.nativeEvent.layout\r\n            var _update = Object.assign(this.state.back, {width: width, height: height})\r\n            this.setState({back: _update})\r\n            if (this.state.mesured) {\r\n              if (this.props.alignHeight) {\r\n                this.setState({height: Math.max(this.state.face.height, this.state.back.height)})\r\n              }\r\n              if (this.props.alignWidth) {\r\n                this.setState({width: Math.max(this.state.face.width, this.state.back.width)})\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          {c[1]}\r\n        </Back>\r\n      )\r\n    } else {\r\n      render_side = (\r\n        <Face\r\n          style={[ this.state.height > 0 && { height: this.state.height }, this.state.width > 0 && { width: this.state.width }]}\r\n          onLayout={(event) => {\r\n            var {x, y, width, height} = event.nativeEvent.layout;\r\n            var _update = Object.assign(this.state.face, {width: width, height: height})\r\n            this.setState({face: _update})\r\n            if (this.state.mesured) {\r\n              if (this.props.alignHeight) {\r\n                this.setState({height: Math.max(this.state.face.height, this.state.back.height)})\r\n              }\r\n              if (this.props.alignWidth) {\r\n                this.setState({width: Math.max(this.state.face.width, this.state.back.width)})\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          {c[0]}\r\n        </Face>\r\n      )\r\n    }\r\n\r\n    // FIX: ScrollView inside Flip Card not scrollable\r\n    // TODO: Replace below fix with by using \"disabled\" function (RN 0.21 exclusive)\r\n    // REF: https://github.com/facebook/react-native/pull/5931\r\n    //      https://github.com/facebook/react-native/issues/2103\r\n    if (this.props.clickable) {\r\n      let opacity = 0;\r\n      if ( ((this.props.alignHeight || this.props.alignWidth) && this.state.mesured) ||\r\n        !(this.props.alignHeight || this.props.alignWidth))  {\r\n        // if you set alignXXX property, we show this side after mesured\r\n        // Otherwise, it's showed immediately\r\n        opacity = 1;\r\n      }\r\n        return (\r\n        <TouchableOpacity\r\n          style={{flex:1}}\r\n          testID={this.props.testID}\r\n          activeOpacity={1}\r\n          onPress={() => { this._toggleCard(); }}\r\n        >\r\n          <Animated.View\r\n            {...this.props}\r\n            style={[\r\n              S.flipCard,\r\n              {\r\n                transform,\r\n                opacity,\r\n              },\r\n              this.props.style\r\n            ]}\r\n          >\r\n            {render_side}\r\n          </Animated.View>\r\n        </TouchableOpacity>\r\n      )\r\n    } else {\r\n      return (\r\n        <Animated.View\r\n          {...this.props}\r\n          style={[S.flipCard,\r\n          {transform: transform},\r\n          this.props.style\r\n          ]}\r\n        >\r\n          {render_side}\r\n        </Animated.View>\r\n      )\r\n    }\r\n  }\r\n}\r\nFlipCard.propTypes = {\r\n  flip: PropTypes.bool,\r\n  friction: PropTypes.number,\r\n  perspective: PropTypes.number,\r\n  flipHorizontal: PropTypes.bool,\r\n  flipVertical: PropTypes.bool,\r\n  clickable: PropTypes.bool,\r\n  onFlipEnd: PropTypes.func,\r\n  onFlipStart: PropTypes.func,\r\n  alignHeight: PropTypes.bool,\r\n  alignWidth: PropTypes.bool,\r\n  useNativeDriver: PropTypes.bool,\r\n  children (props, propName, componentName) {\r\n    const prop = props[propName]\r\n    if (React.Children.count(prop) !== 2) {\r\n      return new Error(\r\n        '`' + componentName + '` ' +\r\n        'should contain exactly two children. ' +\r\n        'The first child represents the front of the card. ' +\r\n        'The second child represents the back of the card.'\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nFlipCard.defaultProps = {\r\n  flip: false,\r\n  friction: 6,\r\n  perspective: 1000,\r\n  flipHorizontal: false,\r\n  flipVertical: true,\r\n  clickable: true,\r\n  onFlipEnd: () => {},\r\n  onFlipStart: () => {},\r\n  alignHeight: false,\r\n  alignWidth: false,\r\n  useNativeDriver: true,\r\n}\r\n\r\n\r\nexport class Face extends Component {\r\n  render () {\r\n    return (\r\n      <View\r\n        style={[S.face, this.props.style]}\r\n        onLayout={this.props.onLayout}\r\n      >\r\n        {this.props.children}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nFace.propTypes = {\r\n  children (props, propName, componentName) {\r\n  }\r\n}\r\n\r\nexport class Back extends Component {\r\n  render () {\r\n    var transform = []\r\n    if (this.props.flipHorizontal) {\r\n      transform.push({scaleX: -1})\r\n      if (Platform.OS === \"android\") {\r\n        transform.push({perspective: this.props.perspective})\r\n      }\r\n    }\r\n    if (this.props.flipVertical) {\r\n      transform.push({scaleY: -1})\r\n      if (Platform.OS === \"android\") {\r\n        transform.push({perspective: this.props.perspective})\r\n      }\r\n    }\r\n\r\n    return (\r\n      <View\r\n      style={[\r\n        S.back,\r\n        this.props.style,\r\n        {transform: transform}\r\n        ]}\r\n        onLayout={this.props.onLayout}>\r\n        {this.props.children}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nBack.defaultProps = {\r\n  flipHorizontal: false,\r\n  flipVertical: true,\r\n  perspective: 1000,\r\n}\r\n\r\nBack.propTypes = {\r\n  flipHorizontal: PropTypes.bool,\r\n  flipVertical: PropTypes.bool,\r\n  perspective: PropTypes.number,\r\n  children (props, propName, componentName) {\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}