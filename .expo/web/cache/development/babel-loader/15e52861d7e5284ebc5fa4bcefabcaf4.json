{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SvgQRCode from \"react-native-qrcode-svg\";\nimport FlipCard from \"react-native-flip-card\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Dotd() {\n  var handleClick = function handleClick(url) {\n    Linking.canOpenURL(url).then(function (supported) {\n      if (supported) {\n        Linking.openURL(url);\n      } else {\n        console.log(\"Don't know how to open URI: \" + url);\n      }\n    });\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      flip = _useState2[0],\n      setFlip = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setFlip(false);\n    }, 750);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.split,\n      children: [_jsx(View, {\n        style: {\n          height: 250\n        },\n        children: _jsxs(FlipCard, {\n          friction: 6,\n          perspective: 1000,\n          flipHorizontal: false,\n          flipVertical: true,\n          flip: flip,\n          clickable: true,\n          alignHeight: false,\n          children: [_jsxs(View, {\n            style: styles.face,\n            children: [_jsx(Ionicons, {\n              style: styles.qr,\n              name: \"qr-code-outline\",\n              size: 32,\n              color: \"#485765\"\n            }), _jsx(Image, {\n              style: {\n                width: 500,\n                height: 250,\n                marginLeft: 17\n              },\n              source: {\n                uri: \"https://dotdstorage.blob.core.windows.net/logos/dotd_card.png\"\n              }\n            })]\n          }), _jsx(View, {\n            style: [styles.cardshadow, styles.shadowProp],\n            children: _jsx(SvgQRCode, {\n              size: 150,\n              value: \"https://dotdsolutions.eu\"\n            })\n          })]\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          handleClick(\"https://dotdsolutions.eu\");\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 20,\n            color: \"#B3B3B3\"\n          },\n          children: \"Website\"\n        })\n      })]\n    }), _jsx(Text, {\n      children: \"Graphics by Marmota\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 6,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n    elevation: 3,\n    backgroundColor: \"#052846\",\n    width: 150\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  split: {\n    height: 400,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 50\n  },\n  face: {},\n  cardshadow: {\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    width: 350,\n    height: 225,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  shadowProp: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.53,\n    shadowRadius: 13.97,\n    elevation: 21\n  },\n  qr: {\n    position: \"relative\",\n    bottom: -225,\n    right: -390,\n    zIndex: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/screens/Dotd.tsx"],"names":["StatusBar","React","useEffect","useState","SvgQRCode","FlipCard","Ionicons","Dotd","handleClick","url","Linking","canOpenURL","then","supported","openURL","console","log","flip","setFlip","setTimeout","styles","container","split","height","face","qr","width","marginLeft","uri","cardshadow","shadowProp","button","fontSize","color","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","flex","marginBottom","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","bottom","right","zIndex"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Image,\r\n  Linking,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport SvgQRCode from \"react-native-qrcode-svg\";\r\nimport FlipCard from \"react-native-flip-card\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\nexport default function Dotd() {\r\n  const handleClick = (url: string) => {\r\n    Linking.canOpenURL(url).then((supported) => {\r\n      if (supported) {\r\n        Linking.openURL(url);\r\n      } else {\r\n        console.log(\"Don't know how to open URI: \" + url);\r\n      }\r\n    });\r\n  };\r\n  const [flip, setFlip] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(false);\r\n    }, 750);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.split}>\r\n        <View style={{ height: 250 }}>\r\n          <FlipCard\r\n            friction={6}\r\n            perspective={1000}\r\n            flipHorizontal={false}\r\n            flipVertical={true}\r\n            flip={flip}\r\n            clickable={true}\r\n            alignHeight={false}\r\n          >\r\n            {/* Face Side */}\r\n            <View style={styles.face}>\r\n            <Ionicons\r\n                style={styles.qr}\r\n                name=\"qr-code-outline\"\r\n                size={32}\r\n                color=\"#485765\"\r\n              />\r\n              <Image\r\n                style={{ width: 500, height: 250, marginLeft: 17 }}\r\n                source={{\r\n                  uri: \"https://dotdstorage.blob.core.windows.net/logos/dotd_card.png\",\r\n                }}\r\n              ></Image>\r\n            </View>\r\n            {/* Back Side */}\r\n            <View style={[styles.cardshadow, styles.shadowProp]}>\r\n              <SvgQRCode\r\n                size={150}\r\n                value=\"https://dotdsolutions.eu\"\r\n              />\r\n            </View>\r\n          </FlipCard>\r\n        </View>\r\n        <StatusBar style=\"auto\" />\r\n        <Pressable\r\n          style={styles.button}\r\n          onPress={() => {\r\n            handleClick(\"https://dotdsolutions.eu\");\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 20, color: \"#B3B3B3\" }}>Website</Text>\r\n        </Pressable>\r\n      </View>\r\n      <Text>Graphics by Marmota</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 20,\r\n    elevation: 3,\r\n    backgroundColor: \"#052846\",\r\n    width: 150,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  split: {\r\n    height: 400,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 50,\r\n  },\r\n  face: {\r\n    // height: 300,\r\n  },\r\n  cardshadow: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n    width: 350,\r\n    height: 225,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  shadowProp: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.53,\r\n    shadowRadius: 13.97,\r\n    elevation: 21,\r\n  },\r\n  qr: {\r\n    position: \"relative\",\r\n    bottom: -225,\r\n    right: -390,\r\n    zIndex: 100,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}