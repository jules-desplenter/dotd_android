{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport FlipCard from \"react-native-flip-card\";\nimport SvgQRCode from \"react-native-qrcode-svg\";\nimport AppContext from \"../components/AppContext\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ShareScreen() {\n  var id = useContext(AppContext);\n  var url = \"https://jules-desplenter.github.io/?id=\" + (id ? id.Id ? id.Id : \"\" : \"\");\n\n  var handleClick = function handleClick(url) {\n    Clipboard.setString(url);\n    alert(\"copied\");\n  };\n\n  var name = id == null ? void 0 : id.name;\n\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: \"Connect with me: \" + url\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.action === Share.sharedAction) {\n              if (result.activityType) {} else {}\n            } else if (result.action === Share.dismissedAction) {}\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      flip = _useState2[0],\n      setFlip = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setFlip(false);\n    }, 750);\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.split,\n      children: [_jsx(View, {\n        style: {\n          height: 250\n        },\n        children: _jsxs(FlipCard, {\n          friction: 6,\n          perspective: 1000,\n          flipHorizontal: false,\n          flipVertical: true,\n          flip: flip,\n          clickable: true,\n          alignHeight: false,\n          children: [_jsxs(View, {\n            style: styles.face,\n            children: [_jsx(Ionicons, {\n              style: styles.qr,\n              name: \"qr-code-outline\",\n              size: 32,\n              color: \"#485765\"\n            }), _jsx(View, {\n              style: {\n                width: 340,\n                height: 215,\n                zIndex: 1,\n                backgroundColor: \"#050705\",\n                borderRadius: 12,\n                marginTop: 12,\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: _jsx(Text, {\n                style: styles.cardName,\n                children: name\n              })\n            })]\n          }), _jsx(View, {\n            style: [styles.cardshadow, styles.shadowProp],\n            children: _jsx(SvgQRCode, {\n              size: 150,\n              value: url\n            })\n          })]\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          onShare();\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 20,\n            color: \"#B3B3B3\"\n          },\n          children: \"Share\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 6,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n    elevation: 3,\n    backgroundColor: \"#052846\",\n    width: 150\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  split: {\n    height: 400,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 50\n  },\n  face: {},\n  cardshadow: {\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    width: 350,\n    height: 225,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  shadowProp: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.53,\n    shadowRadius: 13.97,\n    elevation: 21\n  },\n  qr: {\n    position: \"relative\",\n    bottom: -222,\n    right: -300,\n    zIndex: 100\n  },\n  cardName: {\n    color: \"#485765\",\n    fontSize: 30,\n    zIndex: 100,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/screens/Share.tsx"],"names":["StatusBar","React","useContext","useEffect","useState","FlipCard","SvgQRCode","AppContext","Ionicons","ShareScreen","id","url","Id","handleClick","Clipboard","setString","alert","name","onShare","Share","share","message","result","action","sharedAction","activityType","dismissedAction","flip","setFlip","setTimeout","styles","container","split","height","face","qr","width","zIndex","backgroundColor","borderRadius","marginTop","justifyContent","alignItems","cardName","cardshadow","shadowProp","button","fontSize","color","StyleSheet","create","paddingVertical","paddingHorizontal","elevation","flex","marginBottom","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","bottom","right"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Pressable,\r\n  Clipboard,\r\n  Share,\r\n  Image,\r\n} from \"react-native\";\r\nimport FlipCard from \"react-native-flip-card\";\r\nimport SvgQRCode from \"react-native-qrcode-svg\";\r\nimport AppContext from \"../components/AppContext\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\nexport default function ShareScreen() {\r\n  const id = useContext(AppContext);\r\n  const url =\r\n    `https://jules-desplenter.github.io/?id=` +\r\n    (id ? (id.Id ? id.Id : \"\") : \"\");\r\n  const handleClick = (url: string) => {\r\n    Clipboard.setString(url);\r\n    alert(\"copied\");\r\n  };\r\n  const name = id?.name;\r\n  const onShare = async () => {\r\n    try {\r\n      const result = await Share.share({\r\n        message: \"Connect with me: \" + url,\r\n      });\r\n      if (result.action === Share.sharedAction) {\r\n        if (result.activityType) {\r\n          // shared with activity type of result.activityType\r\n        } else {\r\n          // shared\r\n        }\r\n      } else if (result.action === Share.dismissedAction) {\r\n        // dismissed\r\n      }\r\n    } catch (error: any) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  const [flip, setFlip] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(false);\r\n    }, 750);\r\n  }, []);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.split}>\r\n        <View style={{ height: 250 }}>\r\n          <FlipCard\r\n            friction={6}\r\n            perspective={1000}\r\n            flipHorizontal={false}\r\n            flipVertical={true}\r\n            flip={flip}\r\n            clickable={true}\r\n            alignHeight={false}\r\n          >\r\n            {/* Face Side */}\r\n            <View style={styles.face}>\r\n              <Ionicons\r\n                style={styles.qr}\r\n                name=\"qr-code-outline\"\r\n                size={32}\r\n                color=\"#485765\"\r\n              />\r\n              <View\r\n                style={{\r\n                  width: 340,\r\n                  height: 215,\r\n                  zIndex: 1,\r\n                  backgroundColor: \"#050705\",\r\n                  borderRadius: 12,\r\n                  marginTop: 12,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Text style={styles.cardName}>{name}</Text>\r\n              </View>\r\n            </View>\r\n            {/* Back Side */}\r\n            <View style={[styles.cardshadow, styles.shadowProp]}>\r\n              <SvgQRCode size={150} value={url} />\r\n            </View>\r\n          </FlipCard>\r\n        </View>\r\n\r\n        <StatusBar style=\"auto\" />\r\n        <Pressable\r\n          style={styles.button}\r\n          onPress={() => {\r\n            onShare();\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 20, color: \"#B3B3B3\" }}>Share</Text>\r\n        </Pressable>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 20,\r\n    elevation: 3,\r\n    backgroundColor: \"#052846\",\r\n    width: 150,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  split: {\r\n    height: 400,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 50,\r\n  },\r\n  face: {\r\n    // height: 300,\r\n  },\r\n  cardshadow: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n    width: 350,\r\n    height: 225,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  shadowProp: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.53,\r\n    shadowRadius: 13.97,\r\n    elevation: 21,\r\n  },\r\n  qr: {\r\n    position: \"relative\",\r\n    bottom: -222,\r\n    right: -300,\r\n    zIndex: 100,\r\n\r\n  },\r\n  cardName: {\r\n    color: \"#485765\",\r\n    fontSize: 30,\r\n    zIndex: 100,\r\n    marginTop: 10\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}