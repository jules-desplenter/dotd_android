{"ast":null,"code":"import React, { useContext } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useEditUserModal from \"../hooks/useEditUserModal\";\nimport AppContext from \"./AppContext\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GenericModal(props) {\n  var id = useContext(AppContext);\n  var userId = id ? id : {\n    Id: \"\"\n  };\n\n  var _useEditUserModal = useEditUserModal(userId.id, props.ob),\n      PostData = _useEditUserModal.PostData;\n\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.state,\n    onRequestClose: function onRequestClose() {\n      props.setState(!props.state);\n    },\n    children: _jsx(Pressable, {\n      onPress: function onPress() {\n        return props.setState(!props.state);\n      },\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"rgba(0,0,0,0.5)\"\n      },\n      children: _jsxs(Pressable, {\n        onPress: function onPress() {},\n        style: styles.modalView,\n        children: [_jsx(Pressable, {\n          style: {\n            position: \"absolute\",\n            right: 15,\n            top: 15\n          },\n          onPress: function onPress() {\n            props.setState(!props.state);\n            var temp = props.ob;\n            temp[props.obPlace] = \"\";\n            temp[props.obPlace + \"_importance\"] = 0;\n            props.setOb(temp);\n            props.postData();\n          },\n          children: _jsx(Ionicons, {\n            name: \"ios-trash-outline\",\n            size: 32,\n            color: \"red\"\n          })\n        }), _jsxs(Text, {\n          style: {\n            fontWeight: \"bold\",\n            marginBottom: 20,\n            marginTop: -10\n          },\n          children: [\"Edit \", props.name]\n        }), _jsxs(Text, {\n          style: styles.modalText,\n          children: [\"Hint: \", props.tip]\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          onChangeText: props.onChangeText,\n          value: props.text\n        }), _jsxs(Text, {\n          style: styles.modalText,\n          children: [\"importance \", props.name]\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          onChangeText: props.onChangeImportance,\n          value: props.importance ? props.importance.toString() : \"\",\n          keyboardType: \"numeric\"\n        }), _jsxs(View, {\n          style: styles.modalButtons,\n          children: [_jsx(Pressable, {\n            style: [styles.button],\n            onPress: function onPress() {\n              return props.setState(!props.state);\n            },\n            children: _jsx(Text, {\n              style: styles.buttonCancel,\n              children: \"Cancel\"\n            })\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonSave],\n            onPress: function onPress() {\n              props.setState(!props.state);\n              var temp = props.ob;\n              temp[props.obPlace] = props.startUrl + props.text;\n              temp[props.obPlace + \"_importance\"] = +props.importance;\n              props.setOb(temp);\n              props.postData();\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Save\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  modalButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"stretch\",\n    width: 260,\n    marginTop: 15,\n    marginBottom: -20\n  },\n  buttonCancel: {\n    color: \"#7b9cac\",\n    textDecorationLine: \"underline\"\n  },\n  buttonSave: {\n    backgroundColor: \"#052846\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: -5,\n    textAlign: \"left\",\n    width: 250,\n    marginTop: 10,\n    marginLeft: 30\n  },\n  textInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: 250,\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/components/GenericModal.tsx"],"names":["React","useContext","useEditUserModal","AppContext","Ionicons","GenericModal","props","id","userId","Id","ob","PostData","state","setState","flex","alignItems","justifyContent","backgroundColor","styles","modalView","position","right","top","temp","obPlace","setOb","postData","fontWeight","marginBottom","marginTop","name","modalText","tip","textInput","onChangeText","text","onChangeImportance","importance","toString","modalButtons","button","buttonCancel","buttonSave","startUrl","textStyle","StyleSheet","create","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","color","textDecorationLine","textAlign","marginLeft","borderWidth"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  Modal,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Pressable,\r\n  Text,\r\n  Slider,\r\n} from \"react-native\";\r\nimport useEditUserModal from \"../hooks/useEditUserModal\";\r\nimport AppContext from \"./AppContext\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\ninterface props {\r\n  state: boolean;\r\n  setState: any;\r\n  onChangeText: any;\r\n  ob: any;\r\n  setOb: any;\r\n  text: string;\r\n  id: any;\r\n  name: string;\r\n  obPlace: any;\r\n  onChangeImportance: any;\r\n  importance: string;\r\n  startUrl: string;\r\n  tip: string;\r\n  postData: any;\r\n}\r\n\r\nexport default function GenericModal(props: props) {\r\n  const id = useContext(AppContext);\r\n  const userId: any = id ? id : { Id: \"\" };\r\n  const { PostData } = useEditUserModal(userId.id, props.ob);\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={props.state}\r\n      onRequestClose={() => {\r\n        props.setState(!props.state);\r\n      }}\r\n    >\r\n      <Pressable\r\n        onPress={() => props.setState(!props.state)}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        }}\r\n      >\r\n        <Pressable onPress={() => {}} style={styles.modalView}>\r\n          <Pressable\r\n            style={{ position: \"absolute\", right: 15, top: 15 }}\r\n            onPress={() => {\r\n              props.setState(!props.state);\r\n              let temp = props.ob;\r\n              temp[props.obPlace] = \"\";\r\n              temp[props.obPlace + \"_importance\"] = 0;\r\n              props.setOb(temp);\r\n              props.postData();\r\n            }}\r\n          >\r\n            <Ionicons name=\"ios-trash-outline\" size={32} color=\"red\" />\r\n          </Pressable>\r\n          <Text\r\n            style={{ fontWeight: \"bold\", marginBottom: 20, marginTop: -10 }}\r\n          >\r\n            Edit {props.name}\r\n          </Text>\r\n          <Text style={styles.modalText}>Hint: {props.tip}</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            onChangeText={props.onChangeText}\r\n            value={props.text}\r\n          />\r\n          <Text style={styles.modalText}>importance {props.name}</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            onChangeText={props.onChangeImportance}\r\n            value={props.importance ? props.importance.toString() : \"\"}\r\n            keyboardType=\"numeric\"\r\n          />\r\n          {/* <Slider\r\n            minimumValue={0}\r\n            maximumValue={10}\r\n            onValueChange={props.onChangeImportance}\r\n            value={props.importance ? +props.importance : 0}\r\n            minimumTrackTintColor=\"#30D158\"\r\n            maximumTrackTintColor=\"#052846\"\r\n            style={{width: 250, height: 40, marginTop: 20}}\r\n></Slider> */}\r\n          <View style={styles.modalButtons}>\r\n            <Pressable\r\n              style={[styles.button]}\r\n              onPress={() => props.setState(!props.state)}\r\n            >\r\n              <Text style={styles.buttonCancel}>Cancel</Text>\r\n            </Pressable>\r\n            {/* <Pressable\r\n              style={[styles.button]}\r\n              onPress={() => {\r\n                props.setState(!props.state)\r\n                let temp = props.ob;\r\n                temp[props.obPlace] = \"\";\r\n                temp[props.obPlace + \"_importance\"] = 0;\r\n                props.setOb(temp);\r\n                PostData();\r\n              }}\r\n            >\r\n              <Text style={styles.buttonCancel}>Delete</Text>\r\n            </Pressable> */}\r\n            <Pressable\r\n              style={[styles.button, styles.buttonSave]}\r\n              onPress={() => {\r\n                props.setState(!props.state);\r\n                let temp = props.ob;\r\n                temp[props.obPlace] = props.startUrl + props.text;\r\n                temp[props.obPlace + \"_importance\"] = +props.importance;\r\n                props.setOb(temp);\r\n                props.postData();\r\n              }}\r\n            >\r\n              <Text style={styles.textStyle}>Save</Text>\r\n            </Pressable>\r\n          </View>\r\n        </Pressable>\r\n      </Pressable>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  modalButtons: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"stretch\",\r\n    width: 260,\r\n    marginTop: 15,\r\n    marginBottom: -20,\r\n  },\r\n  buttonCancel: {\r\n    color: \"#7b9cac\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  buttonSave: {\r\n    backgroundColor: \"#052846\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: -5,\r\n    textAlign: \"left\",\r\n    width: 250,\r\n    marginTop: 10,\r\n    marginLeft: 30,\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    width: 250,\r\n    borderRadius: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}