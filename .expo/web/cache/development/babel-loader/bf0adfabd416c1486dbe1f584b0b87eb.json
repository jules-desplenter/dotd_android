{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"react-native-gesture-handler\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Login from \"./screens/Login\";\nimport React, { useState } from \"react\";\nimport AppContext from \"./components/AppContext\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { LeagueScript_400Regular } from \"@expo-google-fonts/dev\";\nimport * as Font from \"expo-font\";\nimport Router from \"./components/Router\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigation = function TabNavigation() {\n  return _jsx(Router, {});\n};\n\nexport default function App() {\n  Font.useFonts(LeagueScript_400Regular);\n  console.log(Font.FontDisplay);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userId = _useState4[0],\n      setUserId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var Id = {\n    Id: userId,\n    setId: setUserId,\n    name: name,\n    setName: setName\n  };\n  console.disableYellowBox = true;\n  return _jsx(AppContext.Provider, {\n    value: Id,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: !loggedIn ? _jsx(Stack.Screen, {\n          name: \"login\",\n          component: function component() {\n            return Login(setLoggedIn);\n          },\n          options: {\n            headerTransparent: true,\n            headerTitle: function headerTitle() {\n              return _jsx(View, {\n                style: {\n                  opacity: 0\n                }\n              });\n            },\n            headerShown: false\n          }\n        }) : _jsx(Stack.Screen, {\n          name: \"tabs\",\n          options: {\n            headerTransparent: true,\n            headerTitle: function headerTitle() {\n              return _jsx(View, {\n                style: {\n                  opacity: 0\n                }\n              });\n            },\n            headerLeft: function headerLeft() {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return setLoggedIn(false);\n                },\n                children: _jsx(Ionicons, {\n                  name: \"md-exit\",\n                  style: {\n                    transform: [{\n                      rotateY: \"180deg\"\n                    }]\n                  },\n                  size: 24,\n                  color: \"#052846\"\n                })\n              });\n            },\n            headerStyle: {}\n          },\n          component: TabNavigation\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/App.tsx"],"names":["NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Login","React","useState","AppContext","Ionicons","LeagueScript_400Regular","Font","Router","Stack","Tab","TabNavigation","App","useFonts","console","log","FontDisplay","loggedIn","setLoggedIn","userId","setUserId","name","setName","Id","setId","disableYellowBox","headerTransparent","headerTitle","opacity","headerShown","headerLeft","transform","rotateY","headerStyle","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Button,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport {\r\n  BottomTabBar,\r\n  createBottomTabNavigator,\r\n} from \"@react-navigation/bottom-tabs\";\r\nimport Edit from \"./screens/Edit\";\r\nimport Login from \"./screens/Login\";\r\nimport Share from \"./screens/Share\";\r\nimport Dotd from \"./screens/Dotd\";\r\nimport React, { useState } from \"react\";\r\nimport AppContext from \"./components/AppContext\";\r\nimport ShareScreen from \"./screens/Share\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport { setCustomText } from \"react-native-global-props\";\r\nimport { useFonts, LeagueScript_400Regular } from \"@expo-google-fonts/dev\";\r\nimport * as Font from \"expo-font\";\r\nimport Router from \"./components/Router\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigation = () => {\r\n  return (\r\n    // <Tab.Navigator\r\n    //   initialRouteName=\"Profile\"\r\n    //   screenOptions={({ route }) => ({\r\n    //     tabBarStyle: {\r\n    //       position: \"absolute\",\r\n    //       bottom: 25,\r\n    //       left: 20,\r\n    //       right: 20,\r\n    //       elevation: 10,\r\n    //       backgroundColor: \"rgba(5,40,70,0.95)\",\r\n    //       borderRadius: 50,\r\n    //       height: 70,\r\n    //       justifyContent: \"center\",\r\n    //       paddingBottom: 5,\r\n    //     },\r\n    //     tabBarActiveTintColor: \"white\",\r\n    //     tabBarInactiveTintColor: \"gray\",\r\n    //   })}\r\n    // >\r\n    //   <Tab.Screen\r\n    //     name=\"Share\"\r\n    //     options={{\r\n    //       headerShown: false,\r\n    //       tabBarIcon: (tabInfo) => {\r\n    //         return (\r\n    //           <Ionicons\r\n    //             name=\"share-social\"\r\n    //             size={24}\r\n    //             color={tabInfo.focused ? \"#fff\" : \"#8e8e93\"}\r\n    //           />\r\n    //         );\r\n    //       },\r\n    //     }}\r\n    //     component={ShareScreen}\r\n    //   ></Tab.Screen>\r\n    //   <Tab.Screen\r\n    //     name=\"Profile\"\r\n    //     options={{\r\n    //       headerShown: false,\r\n    //       tabBarIcon: (tabInfo) => {\r\n    //         return (\r\n    //           <Ionicons\r\n    //             name=\"md-person-circle-outline\"\r\n    //             size={24}\r\n    //             color={tabInfo.focused ? \"#fff\" : \"#8e8e93\"}\r\n    //           />\r\n    //         );\r\n    //       },\r\n    //     }}\r\n    //     component={Edit}\r\n    //   ></Tab.Screen>\r\n    //   <Tab.Screen\r\n    //     name=\"Dotd\"\r\n    //     options={{\r\n\r\n    //       headerShown: false,\r\n    //       tabBarIcon: (tabInfo) => {\r\n    //         return (\r\n    //           <Ionicons\r\n    //             name=\"home-sharp\"\r\n    //             size={24}\r\n    //             color={tabInfo.focused ? \"#fff\" : \"#8e8e93\"}\r\n    //           />\r\n    //         );\r\n    //       },\r\n    //     }}\r\n    //     component={Dotd}\r\n    //   ></Tab.Screen>\r\n    // </Tab.Navigator>\r\n    <Router />\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  Font.useFonts(LeagueScript_400Regular);\r\n  console.log(Font.FontDisplay);\r\n  let [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n  const [userId, setUserId] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n\r\n  const Id = {\r\n    Id: userId,\r\n    setId: setUserId,\r\n    name: name,\r\n    setName: setName,\r\n  };\r\n  console.disableYellowBox = true;\r\n\r\n  return (\r\n    <AppContext.Provider value={Id}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          {!loggedIn ? (\r\n            <Stack.Screen\r\n              name=\"login\"\r\n              component={() => Login(setLoggedIn)}\r\n              options={{\r\n                headerTransparent: true,\r\n                headerTitle: () => <View style={{ opacity: 0 }}></View>,\r\n                headerShown: false,\r\n              }}\r\n            ></Stack.Screen>\r\n          ) : (\r\n            <Stack.Screen\r\n              name=\"tabs\"\r\n              options={{\r\n                headerTransparent: true,\r\n                headerTitle: () => <View style={{ opacity: 0 }}></View>,\r\n                headerLeft: () => (\r\n                  <Pressable onPress={() => setLoggedIn(false)}>\r\n                    <Ionicons\r\n                      name=\"md-exit\"\r\n                      style={{\r\n                        transform: [{ rotateY: \"180deg\" }],\r\n                      }}\r\n                      size={24}\r\n                      color={\"#052846\"}\r\n                    />\r\n                  </Pressable>\r\n                ),\r\n                headerStyle: {},\r\n              }}\r\n              component={TabNavigation}\r\n            ></Stack.Screen>\r\n          )}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}