{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Edit from \"./screens/Edit\";\nimport Login from \"./screens/Login\";\nimport Dotd from \"./screens/Dotd\";\nimport React, { useState } from \"react\";\nimport AppContext from \"./components/AppContext\";\nimport ShareScreen from \"./screens/Share\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { LeagueScript_400Regular } from \"@expo-google-fonts/dev\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigation = function TabNavigation() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Profile\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarStyle: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 20,\n          right: 20,\n          elevation: 10,\n          backgroundColor: \"rgba(5,40,70,0.95)\",\n          borderRadius: 50,\n          height: 70,\n          justifyContent: \"center\",\n          paddingBottom: 5\n        },\n        tabBarActiveTintColor: \"white\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Share\",\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(tabInfo) {\n          return _jsx(Ionicons, {\n            name: \"share-social\",\n            size: 24,\n            color: tabInfo.focused ? \"#fff\" : \"#8e8e93\"\n          });\n        }\n      },\n      component: ShareScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(tabInfo) {\n          return _jsx(Ionicons, {\n            name: \"md-person-circle-outline\",\n            size: 24,\n            color: tabInfo.focused ? \"#fff\" : \"#8e8e93\"\n          });\n        }\n      },\n      component: Edit\n    }), _jsx(Tab.Screen, {\n      name: \"Dotd\",\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(tabInfo) {\n          return _jsx(Ionicons, {\n            name: \"home-sharp\",\n            size: 24,\n            color: tabInfo.focused ? \"#fff\" : \"#8e8e93\"\n          });\n        }\n      },\n      component: Dotd\n    })]\n  });\n};\n\nexport default function App() {\n  Font.useFonts(LeagueScript_400Regular);\n  console.log(Font.FontDisplay);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userId = _useState4[0],\n      setUserId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var Id = {\n    Id: userId,\n    setId: setUserId,\n    name: name,\n    setName: setName\n  };\n  console.disableYellowBox = true;\n  return _jsx(AppContext.Provider, {\n    value: Id,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: !loggedIn ? _jsx(Stack.Screen, {\n          name: \"login\",\n          component: function component() {\n            return Login(setLoggedIn);\n          },\n          options: {\n            headerShown: false\n          }\n        }) : _jsx(Stack.Screen, {\n          name: \"tabs\",\n          options: {\n            headerTransparent: true,\n            headerTitle: function headerTitle() {\n              return _jsx(View, {\n                style: {\n                  opacity: 0\n                }\n              });\n            },\n            headerLeft: function headerLeft() {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return setLoggedIn(false);\n                },\n                children: _jsx(Ionicons, {\n                  name: \"md-exit\",\n                  style: {\n                    transform: [{\n                      rotateY: '180deg'\n                    }]\n                  },\n                  size: 24,\n                  color: \"#052846\"\n                })\n              });\n            },\n            headerStyle: {}\n          },\n          component: TabNavigation\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/App.tsx"],"names":["NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Edit","Login","Dotd","React","useState","AppContext","ShareScreen","Ionicons","LeagueScript_400Regular","Font","Stack","Tab","TabNavigation","route","tabBarStyle","position","bottom","left","right","elevation","backgroundColor","borderRadius","height","justifyContent","paddingBottom","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","tabBarIcon","tabInfo","focused","App","useFonts","console","log","FontDisplay","loggedIn","setLoggedIn","userId","setUserId","name","setName","Id","setId","disableYellowBox","headerTransparent","headerTitle","opacity","headerLeft","transform","rotateY","headerStyle","styles","StyleSheet","create","container","flex","alignItems"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Button,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport {\r\n  BottomTabBar,\r\n  createBottomTabNavigator,\r\n} from \"@react-navigation/bottom-tabs\";\r\nimport Edit from \"./screens/Edit\";\r\nimport Login from \"./screens/Login\";\r\nimport Share from \"./screens/Share\";\r\nimport Dotd from \"./screens/Dotd\";\r\nimport React, { useState } from \"react\";\r\nimport AppContext from \"./components/AppContext\";\r\nimport ShareScreen from \"./screens/Share\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport { setCustomText } from 'react-native-global-props';\r\nimport {\r\n  useFonts,\r\n  LeagueScript_400Regular,\r\n} from \"@expo-google-fonts/dev\";\r\nimport * as Font from 'expo-font';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nconst TabNavigation = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Profile\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarStyle: {\r\n          position: \"absolute\",\r\n          bottom: 25,\r\n          left: 20,\r\n          right: 20,\r\n          elevation: 10,\r\n          backgroundColor: \"rgba(5,40,70,0.95)\",\r\n          borderRadius: 50,\r\n          height: 70,\r\n          justifyContent: \"center\",\r\n          paddingBottom: 5,\r\n        },\r\n        tabBarActiveTintColor: \"white\",\r\n        tabBarInactiveTintColor: \"gray\",\r\n      })}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Share\"\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: (tabInfo) => {\r\n            return (\r\n              <Ionicons\r\n                name=\"share-social\"\r\n                size={24}\r\n                color={tabInfo.focused ? \"#fff\" : \"#8e8e93\"}\r\n              />\r\n            );\r\n          },\r\n        }}\r\n        component={ShareScreen}\r\n      ></Tab.Screen>\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: (tabInfo) => {\r\n            return (\r\n              <Ionicons\r\n                name=\"md-person-circle-outline\"\r\n                size={24}\r\n                color={tabInfo.focused ? \"#fff\" : \"#8e8e93\"}\r\n              />\r\n            );\r\n          },\r\n        }}\r\n        component={Edit}\r\n      ></Tab.Screen>\r\n      <Tab.Screen\r\n        name=\"Dotd\"\r\n        options={{\r\n          \r\n          headerShown: false,\r\n          tabBarIcon: (tabInfo) => {\r\n            return (\r\n              <Ionicons\r\n                name=\"home-sharp\"\r\n                size={24}\r\n                color={tabInfo.focused ? \"#fff\" : \"#8e8e93\"}\r\n              />\r\n            );\r\n          },\r\n        }}\r\n        component={Dotd}\r\n      ></Tab.Screen>\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  Font.useFonts(LeagueScript_400Regular);\r\n  console.log(Font.FontDisplay);\r\n  let [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n  const [userId, setUserId] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\r\n    \"\"\r\n  );\r\n\r\n  const Id = {\r\n    Id: userId,\r\n    setId: setUserId,\r\n    name: name,\r\n    setName: setName\r\n  };\r\n  console.disableYellowBox = true;\r\n\r\n\r\n  return (\r\n    <AppContext.Provider value={Id}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          {!loggedIn ? (\r\n            <Stack.Screen\r\n              name=\"login\"\r\n              component={() => Login(setLoggedIn)}\r\n              options={{headerShown: false}}\r\n            ></Stack.Screen>\r\n          ) : (\r\n            <Stack.Screen\r\n              name=\"tabs\"\r\n              options={{\r\n                headerTransparent:true,\r\n                headerTitle: () => <View style={{opacity:0}}></View>,\r\n                headerLeft: () => (\r\n                  <Pressable onPress={() => setLoggedIn(false)}>\r\n                    <Ionicons\r\n                      name=\"md-exit\"\r\n                      style={{\r\n                        transform: [{rotateY: '180deg'}]\r\n                      }}\r\n                      size={24}\r\n                      color={\"#052846\"}\r\n                    />\r\n                  </Pressable>\r\n                ),\r\n                headerStyle:{\r\n                  \r\n                }\r\n              }}\r\n              component={TabNavigation}\r\n            ></Stack.Screen>\r\n          )}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}