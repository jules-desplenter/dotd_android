{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AppContext from \"../components/AppContext\";\nimport useAddUser from \"../hooks/useAddUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(setLoggedIn) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var id = React.useContext(AppContext);\n  var isMounted = useRef(false);\n\n  var _useAddUser = useAddUser(),\n      response = _useAddUser.response,\n      PostData = _useAddUser.PostData;\n\n  var checklogin = function checklogin() {\n    if (text.includes(\"dotd.tech/cards\")) {\n      var ar = text.split(\"?id=\");\n      id == null ? void 0 : id.setId(ar[1]);\n      setLoggedIn(true);\n    } else {\n      if (text == \"dotd.tech\") {\n        PostData();\n      } else {\n        alert(\"no good login\");\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    if (isMounted.current) {\n      id == null ? void 0 : id.setId(response);\n      setLoggedIn(true);\n    } else {\n      isMounted.current = true;\n    }\n  }, [response]);\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: {\n        uri: \"https://dotdstorage.blob.core.windows.net/logos/mobile.jpg\"\n      },\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsxs(View, {\n        style: {\n          width: 300,\n          height: 300,\n          justifyContent: \"space-between\",\n          marginTop: 200\n        },\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 40,\n              fontWeight: \"bold\",\n              marginBottom: 20\n            },\n            children: \"Hi!\"\n          }), _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Welcome to the dotd app, click the button below to set up yout card.\"\n          })]\n        }), _jsx(Text, {\n          style: {\n            color: \"white\",\n            marginTop: 20\n          },\n          children: \"Enter your ID\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeText,\n          value: text,\n          placeholder: \"Your id\",\n          placeholderTextColor: \"white\"\n        }), _jsx(Pressable, {\n          style: {\n            backgroundColor: \"#052846\",\n            borderColor: \"white\",\n            width: 300,\n            height: 40,\n            borderRadius: 10,\n            borderWidth: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: checklogin,\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 20\n            },\n            children: \"Let's go\"\n          })\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: 1000,\n    backgroundColor: \"#052846\"\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    backgroundColor: \"#052846\",\n    borderColor: \"white\",\n    width: 300,\n    height: 40,\n    borderRadius: 10,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    padding: 10,\n    marginBottom: 75\n  }\n});","map":{"version":3,"sources":["C:/Users/jules/Documents/dotd_final/screens/Login.tsx"],"names":["React","useRef","AppContext","useAddUser","Login","setLoggedIn","useState","text","onChangeText","id","useContext","isMounted","response","PostData","checklogin","includes","ar","split","setId","alert","useEffect","current","styles","container","uri","image","width","height","justifyContent","marginTop","color","fontSize","fontWeight","marginBottom","input","backgroundColor","borderColor","borderRadius","borderWidth","alignItems","StyleSheet","create","flex","padding"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Button,\r\n  ImageBackground,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport * as Svg from \"react-native-svg\";\r\nimport AppContext from \"../components/AppContext\";\r\nimport useAddUser from \"../hooks/useAddUser\";\r\n\r\ninterface props {\r\n  setter: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nexport default function Login(\r\n  setLoggedIn: React.Dispatch<React.SetStateAction<boolean>>\r\n) {\r\n  const [text, onChangeText] = React.useState(\"\");\r\n  const id = React.useContext(AppContext);\r\n  const isMounted = useRef(false)\r\n  const { response, PostData } = useAddUser();\r\n  const checklogin = () => {\r\n    if (text.includes(\"dotd.tech/cards\")) {\r\n      let ar = text.split(\"?id=\");\r\n      id?.setId(ar[1]);\r\n      setLoggedIn(true);\r\n    } else {\r\n      if (text == \"dotd.tech\") {\r\n        PostData();\r\n      } else {\r\n        alert(\"no good login\");\r\n      }\r\n    }\r\n  };\r\n    React.useEffect(() => {\r\n      if(isMounted.current){\r\n        id?.setId(response);\r\n        setLoggedIn(true);\r\n      } else {\r\n       isMounted.current = true;\r\n      }\r\n    }, [response]);\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ImageBackground\r\n        source={{\r\n          uri: \"https://dotdstorage.blob.core.windows.net/logos/mobile.jpg\",\r\n        }}\r\n        resizeMode=\"cover\"\r\n        style={styles.image}\r\n      >\r\n        <View\r\n          style={{\r\n            width: 300,\r\n            height: 300,\r\n            justifyContent: \"space-between\",\r\n            marginTop: 200,\r\n          }}\r\n        >\r\n          <View>\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: 40,\r\n                fontWeight: \"bold\",\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              Hi!\r\n            </Text>\r\n            <Text style={{ color: \"white\" }}>\r\n              Welcome to the dotd app, click the button below to set up yout\r\n              card.\r\n            </Text>\r\n          </View>\r\n          <Text style={{ color: \"white\", marginTop: 20 }}>Enter your ID</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={onChangeText}\r\n            value={text}\r\n            placeholder=\"Your id\"\r\n            placeholderTextColor=\"white\"\r\n          />\r\n          <Pressable\r\n            style={{\r\n              backgroundColor: \"#052846\",\r\n              borderColor: \"white\",\r\n              width: 300,\r\n              height: 40,\r\n              borderRadius: 10,\r\n              borderWidth: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            onPress={checklogin}\r\n          >\r\n            <Text style={{ color: \"white\", fontSize: 20 }}>Let's go</Text>\r\n          </Pressable>\r\n        </View>\r\n      </ImageBackground>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    height: 1000,\r\n    backgroundColor: \"#052846\",\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"#052846\",\r\n    borderColor: \"white\",\r\n    width: 300,\r\n    height: 40,\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    padding: 10,\r\n    marginBottom: 75,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}